0x000:                      |     .pos 0
                            | 
0x000:                      | init:
0x000: 30f40002000000000000 |     irmovq  stack, %rsp
0x00a: 800801000000000000   |     call    main
0x013: 00                   |     halt
                            | 
0x018:                      |     .align 8
0x018:                      |     a:                      # test array
0x018: 0700000000000000     |         .quad   7
0x020: 0400000000000000     |         .quad   4
0x028: 0200000000000000     |         .quad   2
0x030: 0600000000000000     |         .quad   6
0x038: 0900000000000000     |         .quad   9
0x040: 0000000000000000     |         .quad   0
0x048: 0500000000000000     |         .quad   5
0x050: 0100000000000000     |         .quad   1
0x058: 0800000000000000     |         .quad   8
0x060: 0300000000000000     |         .quad   3
                            | 
0x068:                      | bubble_p:
0x068: 30f00100000000000000 |     irmovq  1, %rax
0x072: 6106                 |     subq    %rax, %rsi      # %rsi: last = count - 1
0x074: 710701000000000000   |     jle     bubble_p_end1
                            | 
0x07d:                      | bubble_p_loop1:
0x07d: 2060                 |     rrmovq  %rsi, %rax
0x07f: 6000                 |     addq    %rax, %rax
0x081: 6000                 |     addq    %rax, %rax
0x083: 6000                 |     addq    %rax, %rax      # %rax: last * 8
0x085: 2078                 |     rrmovq  %rdi, %r8
0x087: 6008                 |     addq    %rax, %r8       # %r8: r = data + last
0x089: 2072                 |     rrmovq  %rdi, %rdx      # %rdx: p = data
0x08b: 2020                 |     rrmovq  %rdx, %rax
0x08d: 6180                 |     subq    %r8, %rax
0x08f: 75f200000000000000   |     jge     bubble_p_end2
                            | 
0x098:                      | bubble_p_loop2:
0x098: 30f10800000000000000 |     irmovq  8, %rcx
0x0a2: 6021                 |     addq    %rdx, %rcx      # %rcx: q = p + 1
0x0a4: 50920000000000000000 |     mrmovq  (%rdx), %r9     # %r9: *p
0x0ae: 50a10000000000000000 |     mrmovq  (%rcx), %r10    # %r10: *q
0x0b8: 20a0                 |     rrmovq  %r10, %rax
0x0ba: 6190                 |     subq    %r9, %rax
0x0bc: 75d900000000000000   |     jge     no_swap
                            | 
0x0c5:                      | swap:
0x0c5: 40a20000000000000000 |     rmmovq  %r10, (%rdx)
0x0cf: 40910000000000000000 |     rmmovq  %r9, (%rcx)     # swap
                            | 
0x0d9:                      | no_swap:
0x0d9: 30f00800000000000000 |     irmovq  8, %rax
0x0e3: 6002                 |     addq    %rax, %rdx      # ++p
0x0e5: 2020                 |     rrmovq  %rdx, %rax
0x0e7: 6180                 |     subq    %r8, %rax
0x0e9: 729800000000000000   |     jl      bubble_p_loop2
                            | 
0x0f2:                      | bubble_p_end2:
0x0f2: 30f00100000000000000 |     irmovq  1, %rax
0x0fc: 6106                 |     subq    %rax, %rsi      # --last
0x0fe: 767d00000000000000   |     jg      bubble_p_loop1
                            | 
0x107:                      | bubble_p_end1:
0x107: 90                   |     ret
                            | 
0x108:                      | main:
0x108: 30f60a00000000000000 |     irmovq  10, %rsi
0x112: 30f71800000000000000 |     irmovq  a, %rdi
0x11c: 806800000000000000   |     call    bubble_p
0x125: 90                   |     ret
                            | 
0x200:                      |     .pos 0x200
                            | 
0x200:                      | stack:
